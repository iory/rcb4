<launch>

  <arg name="urdf_path" default="$(find kxr_models)/urdf/kxrl2l2a6h2m.urdf" />
  <arg name="servo_config_path" default="$(find kxr_models)/config/kxrl2l2a6h2m_servo_config.yaml" />
  <arg name="namespace" default="" />
  <arg name="publish_imu" default="true" />
  <arg name="publish_sensor" default="false" />
  <arg name="publish_battery_voltage" default="false" />
  <arg name="control_pressure" default="false" />
  <arg name="imu_frame_id" default="/bodyset94472077639384" />
  <arg name="control_loop_rate" default="20" />
  <arg name="use_rcb4" default="false" doc="Flag to use RCB4 mini board"/>
  <arg name="device" default="" doc="Device path"/>
  <arg name="model_server_port" default="8123" />
  <arg name="joint_group_description" default="" />
  <arg name="frame_count" default="50" />
  <arg name="current_limit" default="4.0" doc="current limit in Amp" />
  <arg name="temperature_limit" default="80" doc="Temperature limit in celsius" />
  <arg name="read_current" default="false" />
  <arg name="read_temperature" default="false" />
  <arg name="use_fullbody_controller" default="true"
       doc="Specifies whether to use the fullbody_controller as the default controller. If set to true,
            the fullbody_controller will be used.
            If set to false, the controller list will be retrieved from the parameter server /default_controller." />

  <group if="$(eval len(arg('namespace')) > 0)" ns="$(arg namespace)" >
    <param name="control_loop_rate" value="$(arg control_loop_rate)" />
    <param name="model_server_port" value="$(arg model_server_port)" />
    <node name="http_server_node"
          pkg="kxr_models" type="http_server_node.py" >
    </node>

    <group if="$(eval len(arg('joint_group_description')) > 0)"
           ns="joint_group_description" >
      <rosparam command="load" file="$(arg joint_group_description)" subst_value="true"/>
    </group>

    <node name="rcb4_ros_bridge"
          pkg="kxr_controller" type="rcb4_ros_bridge.py"
          clear_params="true"
          output="screen"
          required="true" >
      <param name="device" type="str" value="$(arg device)" />
      <param name="urdf_path" type="str" value="$(arg urdf_path)"
             if="$(eval len(arg('urdf_path')) > 0)"/>
      <rosparam subst_value="true" >
        servo_config_path: $(arg servo_config_path)
        publish_imu: $(arg publish_imu)
        publish_sensor: $(arg publish_sensor)
        publish_battery_voltage: $(arg publish_battery_voltage)
        control_pressure: $(arg control_pressure)
        imu_frame_id: $(arg namespace)/$(arg imu_frame_id)
        use_rcb4: $(arg use_rcb4)
        frame_count: $(arg frame_count)
        current_limit: $(arg current_limit)
        temperature_limit: $(arg temperature_limit)
        read_current: $(arg read_current)
        read_temperature: $(arg read_temperature)
        use_fullbody_controller: $(arg use_fullbody_controller)
      </rosparam>
    </node>
    <node name="urdf_model_server"
          pkg="kxr_models" type="urdf_model_server.py" >
    </node>
  </group>

  <group unless="$(eval len(arg('namespace')) > 0)">
    <param name="control_loop_rate" value="$(arg control_loop_rate)" />
    <param name="model_server_port" value="$(arg model_server_port)" />
    <node name="http_server_node"
          pkg="kxr_models" type="http_server_node.py" >
    </node>

    <group if="$(eval len(arg('joint_group_description')) > 0)"
           ns="joint_group_description" >
      <rosparam command="load" file="$(arg joint_group_description)" subst_value="true"/>
    </group>

    <node name="rcb4_ros_bridge"
          pkg="kxr_controller" type="rcb4_ros_bridge.py"
          clear_params="true"
          output="screen"
          required="true" >
      <param name="device" type="str" value="$(arg device)" />
      <param name="urdf_path" type="str" value="$(arg urdf_path)"
             if="$(eval len(arg('urdf_path')) > 0)"/>
      <rosparam subst_value="true" >
        servo_config_path: $(arg servo_config_path)
        publish_imu: $(arg publish_imu)
        publish_sensor: $(arg publish_sensor)
        publish_battery_voltage: $(arg publish_battery_voltage)
        control_pressure: $(arg control_pressure)
        imu_frame_id: $(arg imu_frame_id)
        use_rcb4: $(arg use_rcb4)
        frame_count: $(arg frame_count)
        current_limit: $(arg current_limit)
        temperature_limit: $(arg temperature_limit)
        read_current: $(arg read_current)
        read_temperature: $(arg read_temperature)
        use_fullbody_controller: $(arg use_fullbody_controller)
      </rosparam>
    </node>

    <node name="urdf_model_server"
          pkg="kxr_models" type="urdf_model_server.py" >
    </node>
  </group>

</launch>
