name: Run Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  formatting:
    name: Check Formatting
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install
      run: pip install ruff
    - name: Run Ruff
      run: ruff check .

  tests:
    name: Run Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted]
        python-version: [3.8]
    steps:
    - name: Check if PR is from owner's repository
      id: check-owner
      run: |
        if [[ "${{ github.actor }}" == "owner_username" ]]; then
          echo "::set-output name=is_owner::true"
        else
          echo "::set-output name=is_owner::false"
        fi
    - uses: actions/checkout@v3
    - name: Set up Python for Self-Hosted Linux arm64
      uses: iory/action@v3.1.2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check Python Version
      run: python --version
    - name: Install Pytest
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pytest hacking pytest-cov
    - name: Install python package
      run: pip install .
    - name: Run Pytest
      run: |
        set -o pipefail
        coverage erase
        coverage run -m pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered tests
        coverage xml
    - name: Step for Owner's PR Only
      if: steps.check-owner.outputs.is_owner == 'true'
      run: |
        echo "This step runs only for PRs from the owner's PR"
    - name: Pytest coverage comment
      if: steps.check-owner.outputs.is_owner == 'true'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: ./coverage.xml
        junitxml-path: ./pytest.xml

  industrial_ci:
    name: Run ROS Tests
    needs: [formatting, tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: noetic, ROS_REPO: main, DOCKER_RUN_OPTS: "--privileged"}
        os: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}

  clang_format:
    name: Check Clang Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install clang-format
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install clang-format
      - name: Run clang-format
        run: |
          find . \( -iname '*.c' -o -iname '*.h' -o -iname '*.cpp' -o -iname '*.hpp' -o -iname '*.ino' \) ! -path '*/.*/*' -print0 | xargs -0 clang-format -i
          git diff --exit-code
